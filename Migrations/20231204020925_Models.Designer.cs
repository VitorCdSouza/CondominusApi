// <auto-generated />
using System;
using CondominusApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CondominusApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231204020925_Models")]
    partial class Models
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.Property<int>("IdApart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdApart"));

                    b.Property<int>("IdCondominioApart")
                        .HasColumnType("int");

                    b.Property<string>("NumeroApart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneApart")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdApart");

                    b.HasIndex("IdCondominioApart");

                    b.ToTable("Apartamentos");

                    b.HasData(
                        new
                        {
                            IdApart = 1,
                            IdCondominioApart = 1,
                            NumeroApart = "A001",
                            TelefoneApart = "11912345678"
                        },
                        new
                        {
                            IdApart = 2,
                            IdCondominioApart = 1,
                            NumeroApart = "B002",
                            TelefoneApart = "11912345678"
                        },
                        new
                        {
                            IdApart = 3,
                            IdCondominioApart = 1,
                            NumeroApart = "C003",
                            TelefoneApart = "11887654321"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.AreaComum", b =>
                {
                    b.Property<int>("IdAreaComum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAreaComum"));

                    b.Property<string>("NomeAreaComum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAreaComum");

                    b.ToTable("AreasComuns");

                    b.HasData(
                        new
                        {
                            IdAreaComum = 1,
                            NomeAreaComum = "Churrasqueira"
                        },
                        new
                        {
                            IdAreaComum = 2,
                            NomeAreaComum = "Salão de Jogos"
                        },
                        new
                        {
                            IdAreaComum = 3,
                            NomeAreaComum = "Quadra"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.Property<int>("IdCond")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCond"));

                    b.Property<string>("EnderecoCond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCond")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCond");

                    b.ToTable("Condominios");

                    b.HasData(
                        new
                        {
                            IdCond = 1,
                            EnderecoCond = "Rua Guaranésia, 1070",
                            NomeCond = "Vila Nova Maria"
                        },
                        new
                        {
                            IdCond = 2,
                            EnderecoCond = "Rua Paulo Andrighetti, 1573",
                            NomeCond = "Condomínio Aquarella Pari Colore"
                        },
                        new
                        {
                            IdCond = 3,
                            EnderecoCond = "Rua Paulo Andrighetti, 449",
                            NomeCond = "Condomínio Edifício Antônio Walter Santiago"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Dependente", b =>
                {
                    b.Property<int>("IdDependente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDependente"));

                    b.Property<string>("CpfDependente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPessoaDependente")
                        .HasColumnType("int");

                    b.Property<string>("NomeDependente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDependente");

                    b.HasIndex("IdPessoaDependente");

                    b.ToTable("Dependentes");

                    b.HasData(
                        new
                        {
                            IdDependente = 1,
                            CpfDependente = "11242100083",
                            IdPessoaDependente = 1,
                            NomeDependente = "João Gomes"
                        },
                        new
                        {
                            IdDependente = 2,
                            CpfDependente = "30777454025",
                            IdPessoaDependente = 1,
                            NomeDependente = "Maria Silva"
                        },
                        new
                        {
                            IdDependente = 3,
                            CpfDependente = "53086593032",
                            IdPessoaDependente = 2,
                            NomeDependente = "Carlos Oliveira"
                        },
                        new
                        {
                            IdDependente = 4,
                            CpfDependente = "54710630070",
                            IdPessoaDependente = 3,
                            NomeDependente = "Ana Souza"
                        },
                        new
                        {
                            IdDependente = 5,
                            CpfDependente = "03940474002",
                            IdPessoaDependente = 3,
                            NomeDependente = "Pedro Santos"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.Property<int>("IdEnt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnt"));

                    b.Property<int?>("ApartamentoEntIdApart")
                        .HasColumnType("int");

                    b.Property<string>("CodEnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataEntregaEnt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRetiradaEnt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinatarioEnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdApartamentoEnt")
                        .HasColumnType("int");

                    b.HasKey("IdEnt");

                    b.HasIndex("ApartamentoEntIdApart");

                    b.ToTable("Entregas");

                    b.HasData(
                        new
                        {
                            IdEnt = 1,
                            CodEnt = "NBR1354897",
                            DataEntregaEnt = new DateTime(2023, 12, 3, 23, 9, 24, 914, DateTimeKind.Local).AddTicks(1169),
                            DataRetiradaEnt = new DateTime(2023, 12, 4, 23, 9, 24, 914, DateTimeKind.Local).AddTicks(1182),
                            DestinatarioEnt = "Joao Guilherme",
                            IdApartamentoEnt = 1
                        },
                        new
                        {
                            IdEnt = 2,
                            CodEnt = "NBR2468135",
                            DataEntregaEnt = new DateTime(2023, 12, 3, 23, 9, 24, 914, DateTimeKind.Local).AddTicks(1188),
                            DataRetiradaEnt = new DateTime(2023, 12, 5, 23, 9, 24, 914, DateTimeKind.Local).AddTicks(1189),
                            DestinatarioEnt = "Maria Joaquina",
                            IdApartamentoEnt = 2
                        },
                        new
                        {
                            IdEnt = 3,
                            CodEnt = "NBR3581415",
                            DataEntregaEnt = new DateTime(2023, 12, 3, 23, 9, 24, 914, DateTimeKind.Local).AddTicks(1190),
                            DataRetiradaEnt = new DateTime(2023, 12, 4, 23, 9, 24, 914, DateTimeKind.Local).AddTicks(1191),
                            DestinatarioEnt = "Ana Clara",
                            IdApartamentoEnt = 3
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Notificacao", b =>
                {
                    b.Property<int>("IdNotificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotificacao"));

                    b.Property<string>("AssuntoNotificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEnvioNotificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPessoaNotificacao")
                        .HasColumnType("int");

                    b.Property<string>("MensagemNotificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PessoaNotificacaoIdPessoa")
                        .HasColumnType("int");

                    b.HasKey("IdNotificacao");

                    b.HasIndex("PessoaNotificacaoIdPessoa");

                    b.ToTable("Notificacoes");

                    b.HasData(
                        new
                        {
                            IdNotificacao = 1,
                            AssuntoNotificacao = "Manutenção elétrica",
                            DataEnvioNotificacao = new DateTime(2023, 12, 6, 9, 13, 22, 0, DateTimeKind.Unspecified),
                            IdPessoaNotificacao = 0,
                            MensagemNotificacao = "Haverá manutencão no quadro de força do prédio, dia: 20/12 as 14 horas"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPessoa"));

                    b.Property<string>("CpfPessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdApartamentoPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioPessoa")
                        .HasColumnType("int");

                    b.Property<string>("NomePessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonePessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPessoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPessoa");

                    b.HasIndex("IdApartamentoPessoa");

                    b.ToTable("Pessoas");

                    b.HasData(
                        new
                        {
                            IdPessoa = 1,
                            CpfPessoa = "56751898901",
                            IdApartamentoPessoa = 1,
                            NomePessoa = "João Gomes",
                            TelefonePessoa = "11924316523",
                            TipoPessoa = "Admin"
                        },
                        new
                        {
                            IdPessoa = 2,
                            CpfPessoa = "89674156892",
                            IdApartamentoPessoa = 2,
                            NomePessoa = "Maria Oliveira",
                            TelefonePessoa = "1198254351",
                            TipoPessoa = "Morador"
                        },
                        new
                        {
                            IdPessoa = 3,
                            CpfPessoa = "32569874561",
                            IdApartamentoPessoa = 3,
                            NomePessoa = "João Viana",
                            TelefonePessoa = "11984512345",
                            TipoPessoa = "Morador"
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.PessoaAreaComum", b =>
                {
                    b.Property<int>("IdPessoaPessArea")
                        .HasColumnType("int");

                    b.Property<int>("IdAreaComumPessArea")
                        .HasColumnType("int");

                    b.Property<int>("IdPessArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPessArea"));

                    b.Property<DateTime>("dataHoraFimPessArea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataHoraInicioPessArea")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPessoaPessArea", "IdAreaComumPessArea");

                    b.HasIndex("IdAreaComumPessArea");

                    b.ToTable("PessoasAreasComuns");
                });

            modelBuilder.Entity("CondominusApi.Models.PessoaNoti", b =>
                {
                    b.Property<int>("IdPessoaPessoaNoti")
                        .HasColumnType("int");

                    b.Property<int>("IdNotificacaoPessoaNoti")
                        .HasColumnType("int");

                    b.Property<int>("IdPessoaNoti")
                        .HasColumnType("int");

                    b.Property<int?>("NotificacaoPessoaNotiIdNotificacao")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaPessoaNotiIdPessoa")
                        .HasColumnType("int");

                    b.HasKey("IdPessoaPessoaNoti", "IdNotificacaoPessoaNoti");

                    b.HasIndex("NotificacaoPessoaNotiIdNotificacao");

                    b.HasIndex("PessoaPessoaNotiIdPessoa");

                    b.ToTable("PessoaNotis");

                    b.HasData(
                        new
                        {
                            IdPessoaPessoaNoti = 1,
                            IdNotificacaoPessoaNoti = 1,
                            IdPessoaNoti = 1
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAcessoUsuario")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPessoaUsuario")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHashUsuario")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSaltUsuario")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            EmailUsuario = "admin@gmail.com",
                            IdPessoaUsuario = 1,
                            PasswordHashUsuario = new byte[] { 31, 185, 69, 48, 152, 106, 69, 25, 100, 159, 118, 44, 102, 192, 214, 240, 4, 23, 193, 81, 147, 116, 83, 99, 0, 169, 229, 141, 134, 146, 179, 46, 117, 160, 107, 32, 102, 121, 192, 158, 4, 173, 178, 81, 42, 80, 58, 36, 177, 46, 99, 176, 152, 69, 255, 16, 29, 104, 12, 113, 0, 36, 254, 53 },
                            PasswordSaltUsuario = new byte[] { 59, 24, 107, 168, 252, 120, 28, 218, 22, 235, 63, 31, 30, 121, 3, 94, 161, 30, 191, 168, 250, 122, 254, 152, 245, 56, 143, 204, 48, 231, 249, 189, 16, 64, 211, 83, 28, 238, 34, 66, 33, 208, 203, 87, 221, 128, 102, 193, 154, 228, 71, 17, 102, 105, 49, 25, 70, 16, 18, 190, 228, 47, 207, 102, 37, 251, 108, 229, 208, 55, 79, 21, 215, 223, 177, 14, 242, 168, 72, 203, 72, 67, 54, 115, 131, 1, 23, 145, 3, 210, 1, 116, 27, 13, 228, 219, 133, 170, 51, 5, 182, 207, 220, 19, 77, 100, 210, 121, 15, 226, 133, 240, 86, 172, 108, 172, 154, 211, 52, 205, 87, 86, 62, 255, 42, 166, 247, 60 }
                        });
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.HasOne("CondominusApi.Models.Condominio", "CondominioApart")
                        .WithMany("ApartamentosCond")
                        .HasForeignKey("IdCondominioApart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CondominioApart");
                });

            modelBuilder.Entity("CondominusApi.Models.Dependente", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "PessoaDependente")
                        .WithMany("DependentesPessoa")
                        .HasForeignKey("IdPessoaDependente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PessoaDependente");
                });

            modelBuilder.Entity("CondominusApi.Models.Entrega", b =>
                {
                    b.HasOne("CondominusApi.Models.Apartamento", "ApartamentoEnt")
                        .WithMany("EntregasApart")
                        .HasForeignKey("ApartamentoEntIdApart");

                    b.Navigation("ApartamentoEnt");
                });

            modelBuilder.Entity("CondominusApi.Models.Notificacao", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "PessoaNotificacao")
                        .WithMany()
                        .HasForeignKey("PessoaNotificacaoIdPessoa");

                    b.Navigation("PessoaNotificacao");
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.HasOne("CondominusApi.Models.Apartamento", "ApartamentoPessoa")
                        .WithMany("PessoasApart")
                        .HasForeignKey("IdApartamentoPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApartamentoPessoa");
                });

            modelBuilder.Entity("CondominusApi.Models.PessoaAreaComum", b =>
                {
                    b.HasOne("CondominusApi.Models.AreaComum", "AreaComumPessArea")
                        .WithMany("PessoaACAreaComum")
                        .HasForeignKey("IdAreaComumPessArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CondominusApi.Models.Pessoa", "PessoaPessArea")
                        .WithMany("PessoaACPessoa")
                        .HasForeignKey("IdPessoaPessArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaComumPessArea");

                    b.Navigation("PessoaPessArea");
                });

            modelBuilder.Entity("CondominusApi.Models.PessoaNoti", b =>
                {
                    b.HasOne("CondominusApi.Models.Notificacao", "NotificacaoPessoaNoti")
                        .WithMany()
                        .HasForeignKey("NotificacaoPessoaNotiIdNotificacao");

                    b.HasOne("CondominusApi.Models.Pessoa", "PessoaPessoaNoti")
                        .WithMany("PessoaNotiPessoa")
                        .HasForeignKey("PessoaPessoaNotiIdPessoa");

                    b.Navigation("NotificacaoPessoaNoti");

                    b.Navigation("PessoaPessoaNoti");
                });

            modelBuilder.Entity("CondominusApi.Models.Usuario", b =>
                {
                    b.HasOne("CondominusApi.Models.Pessoa", "PessoaUsuario")
                        .WithOne("UsuarioPessoa")
                        .HasForeignKey("CondominusApi.Models.Usuario", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PessoaUsuario");
                });

            modelBuilder.Entity("CondominusApi.Models.Apartamento", b =>
                {
                    b.Navigation("EntregasApart");

                    b.Navigation("PessoasApart");
                });

            modelBuilder.Entity("CondominusApi.Models.AreaComum", b =>
                {
                    b.Navigation("PessoaACAreaComum");
                });

            modelBuilder.Entity("CondominusApi.Models.Condominio", b =>
                {
                    b.Navigation("ApartamentosCond");
                });

            modelBuilder.Entity("CondominusApi.Models.Pessoa", b =>
                {
                    b.Navigation("DependentesPessoa");

                    b.Navigation("PessoaACPessoa");

                    b.Navigation("PessoaNotiPessoa");

                    b.Navigation("UsuarioPessoa");
                });
#pragma warning restore 612, 618
        }
    }
}
